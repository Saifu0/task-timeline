{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nconsole.log(process.env.REACT_APP_SPREADSHEET_ID, process.env.REACT_APP_CLIENT_EMAIL, process.env.REACT_APP_PRIVATE_KEY);\nconst SPREADSHEET_ID = `${process.env.REACT_APP_SPREADSHEET_ID}`;\nconst SHEET_ID = 0;\nconst CLIENT_EMAIL = `${process.env.REACT_APP_CLIENT_EMAIL}`;\nconst PRIVATE_KEY = `${process.env.REACT_APP_PRIVATE_KEY}`;\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\nexport const appendSpreadsheet = async row => {\n  _s();\n\n  try {\n    await doc.useServiceAccountAuth({\n      client_email: CLIENT_EMAIL,\n      private_key: PRIVATE_KEY\n    }); // loads document properties and worksheets\n\n    await doc.loadInfo();\n    const sheet = doc.sheetsById[SHEET_ID]; // const data = await sheet.getRows();\n\n    const result = await sheet.addRow(row);\n  } catch (e) {\n    console.log('Error: ', e);\n  }\n};\n\n_s(appendSpreadsheet, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n  return [doc.useServiceAccountAuth];\n});\n\nexport const getSpreadsheet = async () => {\n  _s2();\n\n  try {\n    await doc.useServiceAccountAuth({\n      client_email: CLIENT_EMAIL,\n      private_key: PRIVATE_KEY\n    }); // loads document properties and worksheets\n\n    await doc.loadInfo();\n    const sheet = doc.sheetsById[SHEET_ID];\n    return await sheet.getRows();\n  } catch (e) {\n    console.log('Error: ', e);\n  }\n};\n\n_s2(getSpreadsheet, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n  return [doc.useServiceAccountAuth];\n});","map":{"version":3,"sources":["/home/saifu/Documents/pikkal/saifur-timeline/src/data/GoogleSheetAPI.js"],"names":["GoogleSpreadsheet","console","log","process","env","REACT_APP_SPREADSHEET_ID","REACT_APP_CLIENT_EMAIL","REACT_APP_PRIVATE_KEY","SPREADSHEET_ID","SHEET_ID","CLIENT_EMAIL","PRIVATE_KEY","doc","appendSpreadsheet","row","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","result","addRow","e","getSpreadsheet","getRows"],"mappings":";;;AAAA,SAAQA,iBAAR,QAAgC,oBAAhC;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,wBAAxB,EAAiDF,OAAO,CAACC,GAAR,CAAYE,sBAA7D,EAAoFH,OAAO,CAACC,GAAR,CAAYG,qBAAhG;AAEA,MAAMC,cAAc,GAAI,GAAEL,OAAO,CAACC,GAAR,CAAYC,wBAAyB,EAA/D;AACA,MAAMI,QAAQ,GAAG,CAAjB;AACA,MAAMC,YAAY,GAAI,GAAEP,OAAO,CAACC,GAAR,CAAYE,sBAAuB,EAA3D;AACA,MAAMK,WAAW,GAAI,GAAER,OAAO,CAACC,GAAR,CAAYG,qBAAsB,EAAzD;AAEA,MAAMK,GAAG,GAAG,IAAIZ,iBAAJ,CAAsBQ,cAAtB,CAAZ;AAEA,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,GAAP,IAAe;AAAA;;AAC5C,MAAI;AACF,UAAMF,GAAG,CAACG,qBAAJ,CAA0B;AAC9BC,MAAAA,YAAY,EAAEN,YADgB;AAE9BO,MAAAA,WAAW,EAAEN;AAFiB,KAA1B,CAAN,CADE,CAKF;;AACA,UAAMC,GAAG,CAACM,QAAJ,EAAN;AAEA,UAAMC,KAAK,GAAGP,GAAG,CAACQ,UAAJ,CAAeX,QAAf,CAAd,CARE,CASF;;AACA,UAAMY,MAAM,GAAG,MAAMF,KAAK,CAACG,MAAN,CAAaR,GAAb,CAArB;AAED,GAZD,CAYE,OAAOS,CAAP,EAAU;AACVtB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBqB,CAAvB;AACD;AACF,CAhBI;;GAAMV,iB;UAEDD,GAAG,CAACG,qB;;;AAgBhB,OAAO,MAAMS,cAAc,GAAG,YAAY;AAAA;;AACtC,MAAI;AACF,UAAMZ,GAAG,CAACG,qBAAJ,CAA0B;AAC9BC,MAAAA,YAAY,EAAEN,YADgB;AAE9BO,MAAAA,WAAW,EAAEN;AAFiB,KAA1B,CAAN,CADE,CAKF;;AACA,UAAMC,GAAG,CAACM,QAAJ,EAAN;AAEA,UAAMC,KAAK,GAAGP,GAAG,CAACQ,UAAJ,CAAeX,QAAf,CAAd;AACA,WAAO,MAAMU,KAAK,CAACM,OAAN,EAAb;AACD,GAVD,CAUE,OAAOF,CAAP,EAAU;AACVtB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBqB,CAAvB;AACD;AACF,CAdI;;IAAMC,c;UAEDZ,GAAG,CAACG,qB","sourcesContent":["import {GoogleSpreadsheet} from 'google-spreadsheet';\n\nconsole.log(process.env.REACT_APP_SPREADSHEET_ID,process.env.REACT_APP_CLIENT_EMAIL,process.env.REACT_APP_PRIVATE_KEY)\n\nconst SPREADSHEET_ID = `${process.env.REACT_APP_SPREADSHEET_ID}`;\nconst SHEET_ID = 0;\nconst CLIENT_EMAIL = `${process.env.REACT_APP_CLIENT_EMAIL}`;\nconst PRIVATE_KEY = `${process.env.REACT_APP_PRIVATE_KEY}`;\n\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\nexport const appendSpreadsheet = async (row) => {\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY,\n      });\n      // loads document properties and worksheets\n      await doc.loadInfo();\n  \n      const sheet = doc.sheetsById[SHEET_ID];\n      // const data = await sheet.getRows();\n      const result = await sheet.addRow(row);\n\n    } catch (e) {\n      console.log('Error: ', e);\n    }\n  };\n\nexport const getSpreadsheet = async () => {\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: CLIENT_EMAIL,\n        private_key: PRIVATE_KEY,\n      });\n      // loads document properties and worksheets\n      await doc.loadInfo();\n  \n      const sheet = doc.sheetsById[SHEET_ID];\n      return await sheet.getRows();\n    } catch (e) {\n      console.log('Error: ', e);\n    }\n  };\n\n"]},"metadata":{},"sourceType":"module"}